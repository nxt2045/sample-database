Grammar:

Rule 0     S' -> statement
Rule 1     statement -> BTREE ( NAME , expr )
Rule 2     statement -> HASH ( NAME , expr )
Rule 3     statement -> OUTPUT ( NAME , NAME )
Rule 4     statement -> expr
Rule 5     statement -> NAME DEFINE expr
Rule 6     expr -> NAME
Rule 7     expr -> ( expr )
Rule 8     expr -> NAME , expr
Rule 9     expr -> NAME COMP NUMBER
Rule 10    expr -> NAME COMP " NAME "
Rule 11    expr -> NAME COMP NAME
Rule 12    expr -> ( expr ) AND ( expr )
Rule 13    expr -> ( expr ) OR ( expr )
Rule 14    expr -> CONCAT ( NAME , NAME )
Rule 15    expr -> MOVSUM ( NAME , NAME , NUMBER )
Rule 16    expr -> MOVAVG ( NAME , NAME , NUMBER )
Rule 17    expr -> SORT ( NAME , expr )
Rule 18    expr -> AVGGROUP ( NAME , NAME , expr )
Rule 19    expr -> SUMGROUP ( NAME , NAME , expr )
Rule 20    expr -> AVG ( NAME , NAME )
Rule 21    expr -> PROJECT ( NAME , expr )
Rule 22    expr -> JOIN ( NAME , NAME , expr )
Rule 23    expr -> SELECT ( NAME , expr )
Rule 24    expr -> INPUT ( NAME )

Terminals, with rules where they appear:

"                    : 10 10
(                    : 1 2 3 7 12 12 13 13 14 15 16 17 18 19 20 21 22 23 24
)                    : 1 2 3 7 12 12 13 13 14 15 16 17 18 19 20 21 22 23 24
,                    : 1 2 3 8 14 15 15 16 16 17 18 18 19 19 20 21 22 22 23
AND                  : 12
AVG                  : 20
AVGGROUP             : 18
BTREE                : 1
COMP                 : 9 10 11
CONCAT               : 14
DEFINE               : 5
HASH                 : 2
INPUT                : 24
JOIN                 : 22
MOVAVG               : 16
MOVSUM               : 15
NAME                 : 1 2 3 3 5 6 8 9 10 10 11 11 14 14 15 15 16 16 17 18 18 19 19 20 20 21 22 22 23 24
NUMBER               : 9 15 16
OR                   : 13
OUTPUT               : 3
PROJECT              : 21
SELECT               : 23
SORT                 : 17
SUMGROUP             : 19
error                : 

Nonterminals, with rules where they appear:

expr                 : 1 2 4 5 7 8 12 12 13 13 17 18 19 21 22 23
statement            : 0


state 0

    (0) S' -> . statement
    (1) statement -> . BTREE ( NAME , expr )
    (2) statement -> . HASH ( NAME , expr )
    (3) statement -> . OUTPUT ( NAME , NAME )
    (4) statement -> . expr
    (5) statement -> . NAME DEFINE expr
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    BTREE           shift and go to state 2
    HASH            shift and go to state 6
    OUTPUT          shift and go to state 7
    NAME            shift and go to state 4
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    statement                      shift and go to state 1
    expr                           shift and go to state 5

state 1

    (0) S' -> statement .


state 2

    (1) statement -> BTREE . ( NAME , expr )
    (               shift and go to state 19


state 3

    (7) expr -> ( . expr )
    (12) expr -> ( . expr ) AND ( expr )
    (13) expr -> ( . expr ) OR ( expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 20

state 4

    (5) statement -> NAME . DEFINE expr
    (6) expr -> NAME .
    (8) expr -> NAME . , expr
    (9) expr -> NAME . COMP NUMBER
    (10) expr -> NAME . COMP " NAME "
    (11) expr -> NAME . COMP NAME
    DEFINE          shift and go to state 22
    $end            reduce using rule 6 (expr -> NAME .)
    ,               shift and go to state 23
    COMP            shift and go to state 24


state 5

    (4) statement -> expr .
    $end            reduce using rule 4 (statement -> expr .)


state 6

    (2) statement -> HASH . ( NAME , expr )
    (               shift and go to state 25


state 7

    (3) statement -> OUTPUT . ( NAME , NAME )
    (               shift and go to state 26


state 8

    (14) expr -> CONCAT . ( NAME , NAME )
    (               shift and go to state 27


state 9

    (15) expr -> MOVSUM . ( NAME , NAME , NUMBER )
    (               shift and go to state 28


state 10

    (16) expr -> MOVAVG . ( NAME , NAME , NUMBER )
    (               shift and go to state 29


state 11

    (17) expr -> SORT . ( NAME , expr )
    (               shift and go to state 30


state 12

    (18) expr -> AVGGROUP . ( NAME , NAME , expr )
    (               shift and go to state 31


state 13

    (19) expr -> SUMGROUP . ( NAME , NAME , expr )
    (               shift and go to state 32


state 14

    (20) expr -> AVG . ( NAME , NAME )
    (               shift and go to state 33


state 15

    (21) expr -> PROJECT . ( NAME , expr )
    (               shift and go to state 34


state 16

    (22) expr -> JOIN . ( NAME , NAME , expr )
    (               shift and go to state 35


state 17

    (23) expr -> SELECT . ( NAME , expr )
    (               shift and go to state 36


state 18

    (24) expr -> INPUT . ( NAME )
    (               shift and go to state 37


state 19

    (1) statement -> BTREE ( . NAME , expr )
    NAME            shift and go to state 38


state 20

    (7) expr -> ( expr . )
    (12) expr -> ( expr . ) AND ( expr )
    (13) expr -> ( expr . ) OR ( expr )
    )               shift and go to state 39


state 21

    (6) expr -> NAME .
    (8) expr -> NAME . , expr
    (9) expr -> NAME . COMP NUMBER
    (10) expr -> NAME . COMP " NAME "
    (11) expr -> NAME . COMP NAME
    )               reduce using rule 6 (expr -> NAME .)
    $end            reduce using rule 6 (expr -> NAME .)
    ,               shift and go to state 23
    COMP            shift and go to state 24


state 22

    (5) statement -> NAME DEFINE . expr
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 40

state 23

    (8) expr -> NAME , . expr
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 41

state 24

    (9) expr -> NAME COMP . NUMBER
    (10) expr -> NAME COMP . " NAME "
    (11) expr -> NAME COMP . NAME
    NUMBER          shift and go to state 43
    "               shift and go to state 44
    NAME            shift and go to state 42


state 25

    (2) statement -> HASH ( . NAME , expr )
    NAME            shift and go to state 45


state 26

    (3) statement -> OUTPUT ( . NAME , NAME )
    NAME            shift and go to state 46


state 27

    (14) expr -> CONCAT ( . NAME , NAME )
    NAME            shift and go to state 47


state 28

    (15) expr -> MOVSUM ( . NAME , NAME , NUMBER )
    NAME            shift and go to state 48


state 29

    (16) expr -> MOVAVG ( . NAME , NAME , NUMBER )
    NAME            shift and go to state 49


state 30

    (17) expr -> SORT ( . NAME , expr )
    NAME            shift and go to state 50


state 31

    (18) expr -> AVGGROUP ( . NAME , NAME , expr )
    NAME            shift and go to state 51


state 32

    (19) expr -> SUMGROUP ( . NAME , NAME , expr )
    NAME            shift and go to state 52


state 33

    (20) expr -> AVG ( . NAME , NAME )
    NAME            shift and go to state 53


state 34

    (21) expr -> PROJECT ( . NAME , expr )
    NAME            shift and go to state 54


state 35

    (22) expr -> JOIN ( . NAME , NAME , expr )
    NAME            shift and go to state 55


state 36

    (23) expr -> SELECT ( . NAME , expr )
    NAME            shift and go to state 56


state 37

    (24) expr -> INPUT ( . NAME )
    NAME            shift and go to state 57


state 38

    (1) statement -> BTREE ( NAME . , expr )
    ,               shift and go to state 58


state 39

    (7) expr -> ( expr ) .
    (12) expr -> ( expr ) . AND ( expr )
    (13) expr -> ( expr ) . OR ( expr )
    $end            reduce using rule 7 (expr -> ( expr ) .)
    )               reduce using rule 7 (expr -> ( expr ) .)
    AND             shift and go to state 59
    OR              shift and go to state 60


state 40

    (5) statement -> NAME DEFINE expr .
    $end            reduce using rule 5 (statement -> NAME DEFINE expr .)


state 41

    (8) expr -> NAME , expr .
    $end            reduce using rule 8 (expr -> NAME , expr .)
    )               reduce using rule 8 (expr -> NAME , expr .)


state 42

    (11) expr -> NAME COMP NAME .
    $end            reduce using rule 11 (expr -> NAME COMP NAME .)
    )               reduce using rule 11 (expr -> NAME COMP NAME .)


state 43

    (9) expr -> NAME COMP NUMBER .
    $end            reduce using rule 9 (expr -> NAME COMP NUMBER .)
    )               reduce using rule 9 (expr -> NAME COMP NUMBER .)


state 44

    (10) expr -> NAME COMP " . NAME "
    NAME            shift and go to state 61


state 45

    (2) statement -> HASH ( NAME . , expr )
    ,               shift and go to state 62


state 46

    (3) statement -> OUTPUT ( NAME . , NAME )
    ,               shift and go to state 63


state 47

    (14) expr -> CONCAT ( NAME . , NAME )
    ,               shift and go to state 64


state 48

    (15) expr -> MOVSUM ( NAME . , NAME , NUMBER )
    ,               shift and go to state 65


state 49

    (16) expr -> MOVAVG ( NAME . , NAME , NUMBER )
    ,               shift and go to state 66


state 50

    (17) expr -> SORT ( NAME . , expr )
    ,               shift and go to state 67


state 51

    (18) expr -> AVGGROUP ( NAME . , NAME , expr )
    ,               shift and go to state 68


state 52

    (19) expr -> SUMGROUP ( NAME . , NAME , expr )
    ,               shift and go to state 69


state 53

    (20) expr -> AVG ( NAME . , NAME )
    ,               shift and go to state 70


state 54

    (21) expr -> PROJECT ( NAME . , expr )
    ,               shift and go to state 71


state 55

    (22) expr -> JOIN ( NAME . , NAME , expr )
    ,               shift and go to state 72


state 56

    (23) expr -> SELECT ( NAME . , expr )
    ,               shift and go to state 73


state 57

    (24) expr -> INPUT ( NAME . )
    )               shift and go to state 74


state 58

    (1) statement -> BTREE ( NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 75

state 59

    (12) expr -> ( expr ) AND . ( expr )
    (               shift and go to state 76


state 60

    (13) expr -> ( expr ) OR . ( expr )
    (               shift and go to state 77


state 61

    (10) expr -> NAME COMP " NAME . "
    "               shift and go to state 78


state 62

    (2) statement -> HASH ( NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 79

state 63

    (3) statement -> OUTPUT ( NAME , . NAME )
    NAME            shift and go to state 80


state 64

    (14) expr -> CONCAT ( NAME , . NAME )
    NAME            shift and go to state 81


state 65

    (15) expr -> MOVSUM ( NAME , . NAME , NUMBER )
    NAME            shift and go to state 82


state 66

    (16) expr -> MOVAVG ( NAME , . NAME , NUMBER )
    NAME            shift and go to state 83


state 67

    (17) expr -> SORT ( NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 84

state 68

    (18) expr -> AVGGROUP ( NAME , . NAME , expr )
    NAME            shift and go to state 85


state 69

    (19) expr -> SUMGROUP ( NAME , . NAME , expr )
    NAME            shift and go to state 86


state 70

    (20) expr -> AVG ( NAME , . NAME )
    NAME            shift and go to state 87


state 71

    (21) expr -> PROJECT ( NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 88

state 72

    (22) expr -> JOIN ( NAME , . NAME , expr )
    NAME            shift and go to state 89


state 73

    (23) expr -> SELECT ( NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 90

state 74

    (24) expr -> INPUT ( NAME ) .
    $end            reduce using rule 24 (expr -> INPUT ( NAME ) .)
    )               reduce using rule 24 (expr -> INPUT ( NAME ) .)


state 75

    (1) statement -> BTREE ( NAME , expr . )
    )               shift and go to state 91


state 76

    (12) expr -> ( expr ) AND ( . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 92

state 77

    (13) expr -> ( expr ) OR ( . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 93

state 78

    (10) expr -> NAME COMP " NAME " .
    $end            reduce using rule 10 (expr -> NAME COMP " NAME " .)
    )               reduce using rule 10 (expr -> NAME COMP " NAME " .)


state 79

    (2) statement -> HASH ( NAME , expr . )
    )               shift and go to state 94


state 80

    (3) statement -> OUTPUT ( NAME , NAME . )
    )               shift and go to state 95


state 81

    (14) expr -> CONCAT ( NAME , NAME . )
    )               shift and go to state 96


state 82

    (15) expr -> MOVSUM ( NAME , NAME . , NUMBER )
    ,               shift and go to state 97


state 83

    (16) expr -> MOVAVG ( NAME , NAME . , NUMBER )
    ,               shift and go to state 98


state 84

    (17) expr -> SORT ( NAME , expr . )
    )               shift and go to state 99


state 85

    (18) expr -> AVGGROUP ( NAME , NAME . , expr )
    ,               shift and go to state 100


state 86

    (19) expr -> SUMGROUP ( NAME , NAME . , expr )
    ,               shift and go to state 101


state 87

    (20) expr -> AVG ( NAME , NAME . )
    )               shift and go to state 102


state 88

    (21) expr -> PROJECT ( NAME , expr . )
    )               shift and go to state 103


state 89

    (22) expr -> JOIN ( NAME , NAME . , expr )
    ,               shift and go to state 104


state 90

    (23) expr -> SELECT ( NAME , expr . )
    )               shift and go to state 105


state 91

    (1) statement -> BTREE ( NAME , expr ) .
    $end            reduce using rule 1 (statement -> BTREE ( NAME , expr ) .)


state 92

    (12) expr -> ( expr ) AND ( expr . )
    )               shift and go to state 106


state 93

    (13) expr -> ( expr ) OR ( expr . )
    )               shift and go to state 107


state 94

    (2) statement -> HASH ( NAME , expr ) .
    $end            reduce using rule 2 (statement -> HASH ( NAME , expr ) .)


state 95

    (3) statement -> OUTPUT ( NAME , NAME ) .
    $end            reduce using rule 3 (statement -> OUTPUT ( NAME , NAME ) .)


state 96

    (14) expr -> CONCAT ( NAME , NAME ) .
    $end            reduce using rule 14 (expr -> CONCAT ( NAME , NAME ) .)
    )               reduce using rule 14 (expr -> CONCAT ( NAME , NAME ) .)


state 97

    (15) expr -> MOVSUM ( NAME , NAME , . NUMBER )
    NUMBER          shift and go to state 108


state 98

    (16) expr -> MOVAVG ( NAME , NAME , . NUMBER )
    NUMBER          shift and go to state 109


state 99

    (17) expr -> SORT ( NAME , expr ) .
    $end            reduce using rule 17 (expr -> SORT ( NAME , expr ) .)
    )               reduce using rule 17 (expr -> SORT ( NAME , expr ) .)


state 100

    (18) expr -> AVGGROUP ( NAME , NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 110

state 101

    (19) expr -> SUMGROUP ( NAME , NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 111

state 102

    (20) expr -> AVG ( NAME , NAME ) .
    $end            reduce using rule 20 (expr -> AVG ( NAME , NAME ) .)
    )               reduce using rule 20 (expr -> AVG ( NAME , NAME ) .)


state 103

    (21) expr -> PROJECT ( NAME , expr ) .
    $end            reduce using rule 21 (expr -> PROJECT ( NAME , expr ) .)
    )               reduce using rule 21 (expr -> PROJECT ( NAME , expr ) .)


state 104

    (22) expr -> JOIN ( NAME , NAME , . expr )
    (6) expr -> . NAME
    (7) expr -> . ( expr )
    (8) expr -> . NAME , expr
    (9) expr -> . NAME COMP NUMBER
    (10) expr -> . NAME COMP " NAME "
    (11) expr -> . NAME COMP NAME
    (12) expr -> . ( expr ) AND ( expr )
    (13) expr -> . ( expr ) OR ( expr )
    (14) expr -> . CONCAT ( NAME , NAME )
    (15) expr -> . MOVSUM ( NAME , NAME , NUMBER )
    (16) expr -> . MOVAVG ( NAME , NAME , NUMBER )
    (17) expr -> . SORT ( NAME , expr )
    (18) expr -> . AVGGROUP ( NAME , NAME , expr )
    (19) expr -> . SUMGROUP ( NAME , NAME , expr )
    (20) expr -> . AVG ( NAME , NAME )
    (21) expr -> . PROJECT ( NAME , expr )
    (22) expr -> . JOIN ( NAME , NAME , expr )
    (23) expr -> . SELECT ( NAME , expr )
    (24) expr -> . INPUT ( NAME )
    NAME            shift and go to state 21
    (               shift and go to state 3
    CONCAT          shift and go to state 8
    MOVSUM          shift and go to state 9
    MOVAVG          shift and go to state 10
    SORT            shift and go to state 11
    AVGGROUP        shift and go to state 12
    SUMGROUP        shift and go to state 13
    AVG             shift and go to state 14
    PROJECT         shift and go to state 15
    JOIN            shift and go to state 16
    SELECT          shift and go to state 17
    INPUT           shift and go to state 18

    expr                           shift and go to state 112

state 105

    (23) expr -> SELECT ( NAME , expr ) .
    $end            reduce using rule 23 (expr -> SELECT ( NAME , expr ) .)
    )               reduce using rule 23 (expr -> SELECT ( NAME , expr ) .)


state 106

    (12) expr -> ( expr ) AND ( expr ) .
    $end            reduce using rule 12 (expr -> ( expr ) AND ( expr ) .)
    )               reduce using rule 12 (expr -> ( expr ) AND ( expr ) .)


state 107

    (13) expr -> ( expr ) OR ( expr ) .
    $end            reduce using rule 13 (expr -> ( expr ) OR ( expr ) .)
    )               reduce using rule 13 (expr -> ( expr ) OR ( expr ) .)


state 108

    (15) expr -> MOVSUM ( NAME , NAME , NUMBER . )
    )               shift and go to state 113


state 109

    (16) expr -> MOVAVG ( NAME , NAME , NUMBER . )
    )               shift and go to state 114


state 110

    (18) expr -> AVGGROUP ( NAME , NAME , expr . )
    )               shift and go to state 115


state 111

    (19) expr -> SUMGROUP ( NAME , NAME , expr . )
    )               shift and go to state 116


state 112

    (22) expr -> JOIN ( NAME , NAME , expr . )
    )               shift and go to state 117


state 113

    (15) expr -> MOVSUM ( NAME , NAME , NUMBER ) .
    $end            reduce using rule 15 (expr -> MOVSUM ( NAME , NAME , NUMBER ) .)
    )               reduce using rule 15 (expr -> MOVSUM ( NAME , NAME , NUMBER ) .)


state 114

    (16) expr -> MOVAVG ( NAME , NAME , NUMBER ) .
    $end            reduce using rule 16 (expr -> MOVAVG ( NAME , NAME , NUMBER ) .)
    )               reduce using rule 16 (expr -> MOVAVG ( NAME , NAME , NUMBER ) .)


state 115

    (18) expr -> AVGGROUP ( NAME , NAME , expr ) .
    $end            reduce using rule 18 (expr -> AVGGROUP ( NAME , NAME , expr ) .)
    )               reduce using rule 18 (expr -> AVGGROUP ( NAME , NAME , expr ) .)


state 116

    (19) expr -> SUMGROUP ( NAME , NAME , expr ) .
    $end            reduce using rule 19 (expr -> SUMGROUP ( NAME , NAME , expr ) .)
    )               reduce using rule 19 (expr -> SUMGROUP ( NAME , NAME , expr ) .)


state 117

    (22) expr -> JOIN ( NAME , NAME , expr ) .
    $end            reduce using rule 22 (expr -> JOIN ( NAME , NAME , expr ) .)
    )               reduce using rule 22 (expr -> JOIN ( NAME , NAME , expr ) .)
